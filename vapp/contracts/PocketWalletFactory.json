{
  "contractName": "PocketWalletFactory",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "isInitialized",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "controller",
          "type": "address"
        }
      ],
      "name": "setController",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "setUser",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "removeUser",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "createPocketWallet",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function",
      "payable": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "getUserContractAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "getMyControlledContractAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"createPocketWallet\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMyControlledContractAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getUserContractAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isInitialized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"removeUser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"controller\",\"type\":\"address\"}],\"name\":\"setController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"setUser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/PocketWalletFactory.sol\":\"PocketWalletFactory\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/PocketWallet.sol\":{\"keccak256\":\"0xdc5f05288cadd1da01bbb127f97247c8c71407e055e5e46ab07c2e337097f7fd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://015c83d2294f43c5eca57165c2a62a1a771db76213bb435642de8cf0cab18da1\",\"dweb:/ipfs/QmaKk9dLq2dszpcL3G8Sv83xGQPCGJ5X1tRdoLcBNTNsjU\"]},\"project:/contracts/PocketWalletFactory.sol\":{\"keccak256\":\"0x2263eb742f63ea862513a1b4ae123d9bebc8c8276a3ba7511c380861a702ac4b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7cb9487c5399b97f196a4628c76734bcfa7160b388efb7dcfa43a11aae728779\",\"dweb:/ipfs/QmZ9u6nxc127EFGcdQUp91326Yu1howNN9r2ecd7LAPD1J\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061351a806100206000396000f3fe6080604052600436106200007a5760003560e01c806392eefe9b116200005557806392eefe9b146200010d57806398575188146200013b5780639888402e1462000169578063a6e497b61462000189576200007a565b8063392e53cd146200007f57806339526f6014620000af578063858ced3514620000df575b600080fd5b3480156200008c57600080fd5b5062000097620001cd565b604051620000a69190620007a6565b60405180910390f35b348015620000bc57600080fd5b50620000c7620001d6565b604051620000d6919062000808565b60405180910390f35b348015620000ec57600080fd5b506200010b60048036038101906200010591906200085b565b6200023c565b005b3480156200011a57600080fd5b506200013960048036038101906200013391906200085b565b62000358565b005b3480156200014857600080fd5b506200016760048036038101906200016191906200085b565b62000473565b005b620001876004803603810190620001819190620008d2565b62000573565b005b3480156200019657600080fd5b50620001b56004803603810190620001af91906200085b565b62000712565b604051620001c4919062000808565b60405180910390f35b60006001905090565b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900463ffffffff1663ffffffff1611620002d7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620002ce906200098b565b60405180910390fd5b33600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900463ffffffff1663ffffffff1611620003f3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620003ea906200098b565b60405180910390fd5b336000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900463ffffffff1663ffffffff16116200050e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040162000505906200098b565b60405180910390fd5b600160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905550565b600034338360405162000586906200077b565b62000593929190620009be565b6040518091039082f0905080158015620005b1573d6000803e3d6000fd5b5090506001600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548163ffffffff021916908363ffffffff160217905550806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b612af980620009ec83390190565b60008115159050919050565b620007a08162000789565b82525050565b6000602082019050620007bd600083018462000795565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620007f082620007c3565b9050919050565b6200080281620007e3565b82525050565b60006020820190506200081f6000830184620007f7565b92915050565b600080fd5b6200083581620007e3565b81146200084157600080fd5b50565b60008135905062000855816200082a565b92915050565b60006020828403121562000874576200087362000825565b5b6000620008848482850162000844565b91505092915050565b60006200089a82620007c3565b9050919050565b620008ac816200088d565b8114620008b857600080fd5b50565b600081359050620008cc81620008a1565b92915050565b600060208284031215620008eb57620008ea62000825565b5b6000620008fb84828501620008bb565b91505092915050565b600082825260208201905092915050565b7f506f636b65742077616c6c6574206973206e6f7420726567697374657265642060008201527f696e20666163746f727900000000000000000000000000000000000000000000602082015250565b600062000973602a8362000904565b9150620009808262000915565b604082019050919050565b60006020820190508181036000830152620009a68162000964565b9050919050565b620009b8816200088d565b82525050565b6000604082019050620009d56000830185620007f7565b620009e46020830184620009ad565b939250505056fe608060405260405162002af938038062002af9833981810160405281019062000029919062000904565b336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506200007c826001620000ee60201b60201c565b6200008f8160016200024a60201b60201c565b6200009f6200032560201b60201c565b620000e6826040518060400160405280600581526020017f44616464790000000000000000000000000000000000000000000000000000008152506200049a60201b60201c565b505062000cb2565b6001829080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548163ffffffff021916908363ffffffff16021790555080620002465760008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166392eefe9b836040518263ffffffff1660e01b81526004016200021191906200095c565b600060405180830381600087803b1580156200022c57600080fd5b505af115801562000241573d6000803e3d6000fd5b505050505b5050565b81600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080620003215760008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663858ced35836040518263ffffffff1660e01b8152600401620002ec9190620009e4565b600060405180830381600087803b1580156200030757600080fd5b505af11580156200031c573d6000803e3d6000fd5b505050505b5050565b66071afd498d0000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1631101562000498576000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16316611c37937e08000620003be919062000a3a565b90506000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16826040516200040a9062000aaa565b60006040518083038185875af1925050503d806000811462000449576040519150601f19603f3d011682016040523d82523d6000602084013e6200044e565b606091505b505090508062000495576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200048c9062000b22565b60405180910390fd5b50505b565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16148062000542575060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b80620005a357506001600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900463ffffffff1663ffffffff16145b620005e5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620005dc9062000bba565b60405180910390fd5b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900463ffffffff1663ffffffff161462000680576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620006779062000c2c565b60405180910390fd5b600460405180604001604052808473ffffffffffffffffffffffffffffffffffffffff16815260200183815250908060018154018082558091505060019003906000526020600020906002020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010190805190602001906200073b929190620007a5565b505050600480549050600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548163ffffffff021916908363ffffffff1602179055505050565b828054620007b39062000c7d565b90600052602060002090601f016020900481019282620007d7576000855562000823565b82601f10620007f257805160ff191683800117855562000823565b8280016001018555821562000823579182015b828111156200082257825182559160200191906001019062000805565b5b50905062000832919062000836565b5090565b5b808211156200085157600081600090555060010162000837565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600062000887826200085a565b9050919050565b62000899816200087a565b8114620008a557600080fd5b50565b600081519050620008b9816200088e565b92915050565b6000620008cc826200085a565b9050919050565b620008de81620008bf565b8114620008ea57600080fd5b50565b600081519050620008fe81620008d3565b92915050565b600080604083850312156200091e576200091d62000855565b5b60006200092e85828601620008a8565b92505060206200094185828601620008ed565b9150509250929050565b62000956816200087a565b82525050565b60006020820190506200097360008301846200094b565b92915050565b6000819050919050565b6000620009a46200099e62000998846200085a565b62000979565b6200085a565b9050919050565b6000620009b88262000983565b9050919050565b6000620009cc82620009ab565b9050919050565b620009de81620009bf565b82525050565b6000602082019050620009fb6000830184620009d3565b92915050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600062000a478262000a01565b915062000a548362000a01565b92508282101562000a6a5762000a6962000a0b565b5b828203905092915050565b600081905092915050565b50565b600062000a9260008362000a75565b915062000a9f8262000a80565b600082019050919050565b600062000ab78262000a83565b9150819050919050565b600082825260208201905092915050565b7f4661696c656420746f2073656e64204574686572000000000000000000000000600082015250565b600062000b0a60148362000ac1565b915062000b178262000ad2565b602082019050919050565b6000602082019050818103600083015262000b3d8162000afb565b9050919050565b7f4d7573742062652065697468657220757365722c20636f6e74726f6c6c65722060008201527f6f7220666163746f727900000000000000000000000000000000000000000000602082015250565b600062000ba2602a8362000ac1565b915062000baf8262000b44565b604082019050919050565b6000602082019050818103600083015262000bd58162000b93565b9050919050565b7f52656365697069656e7420616c7265616479206578697374696e670000000000600082015250565b600062000c14601b8362000ac1565b915062000c218262000bdc565b602082019050919050565b6000602082019050818103600083015262000c478162000c05565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168062000c9657607f821691505b60208210810362000cac5762000cab62000c4e565b5b50919050565b611e378062000cc26000396000f3fe6080604052600436106100745760003560e01c8063832880e71161004e578063832880e7146100fd578063af7d6ca314610128578063b4e8a6c414610151578063ef6a7c1d1461017c5761007b565b80634420e4861461008057806359ba1394146100a95780635f4ad480146100d45761007b565b3661007b57005b600080fd5b34801561008c57600080fd5b506100a760048036038101906100a291906113ba565b6101a5565b005b3480156100b557600080fd5b506100be610357565b6040516100cb91906115a0565b60405180910390f35b3480156100e057600080fd5b506100fb60048036038101906100f69190611723565b6105e4565b005b34801561010957600080fd5b506101126108e5565b60405161011f919061178e565b60405180910390f35b34801561013457600080fd5b5061014f600480360381019061014a91906117df565b61090f565b005b34801561015d57600080fd5b50610166610a64565b60405161017391906118ce565b60405180910390f35b34801561018857600080fd5b506101a3600480360381019061019e91906118f0565b610af2565b005b6001600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900463ffffffff1663ffffffff161461023d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102349061197a565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16036103415760008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166398575188600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b815260040161030e91906119f9565b600060405180830381600087803b15801561032857600080fd5b505af115801561033c573d6000803e3d6000fd5b505050505b61034c816000611024565b6103546110fa565b50565b6060600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610400575060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b8061046057506001600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900463ffffffff1663ffffffff16145b61049f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161049690611a86565b60405180910390fd5b6004805480602002602001604051908101604052809291908181526020016000905b828210156105db57838290600052602060002090600202016040518060400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160018201805461054a90611ad5565b80601f016020809104026020016040519081016040528092919081815260200182805461057690611ad5565b80156105c35780601f10610598576101008083540402835291602001916105c3565b820191906000526020600020905b8154815290600101906020018083116105a657829003601f168201915b505050505081525050815260200190600101906104c1565b50505050905090565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16148061068b575060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b806106eb57506001600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900463ffffffff1663ffffffff16145b61072a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161072190611a86565b60405180910390fd5b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900463ffffffff1663ffffffff16146107c2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107b990611b52565b60405180910390fd5b600460405180604001604052808473ffffffffffffffffffffffffffffffffffffffff16815260200183815250908060018154018082558091505060019003906000526020600020906002020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101908051906020019061087b929190611265565b505050600480549050600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548163ffffffff021916908363ffffffff1602179055505050565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461099f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161099690611bbe565b60405180910390fd5b4781106109ab57600080fd5b60008273ffffffffffffffffffffffffffffffffffffffff16826040516109d190611c0f565b60006040518083038185875af1925050503d8060008114610a0e576040519150601f19603f3d011682016040523d82523d6000602084013e610a13565b606091505b5050905080610a57576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a4e90611c70565b60405180910390fd5b610a5f6110fa565b505050565b60606001805480602002602001604051908101604052809291908181526020018280548015610ae857602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610a9e575b5050505050905090565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610b99575060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b80610bf957506001600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900463ffffffff1663ffffffff16145b610c38576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c2f90611a86565b60405180910390fd5b6000600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900463ffffffff1663ffffffff1611610cd0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cc790611cdc565b60405180910390fd5b60006001600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900463ffffffff16610d2e9190611d3b565b90506001600480549050610d429190611d6f565b8163ffffffff1614610f6c57600060046001600480549050610d649190611d6f565b81548110610d7557610d74611da3565b5b90600052602060002090600202016040518060400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182018054610df490611ad5565b80601f0160208091040260200160405190810160405280929190818152602001828054610e2090611ad5565b8015610e6d5780601f10610e4257610100808354040283529160200191610e6d565b820191906000526020600020905b815481529060010190602001808311610e5057829003601f168201915b50505050508152505090508060048363ffffffff1681548110610e9357610e92611da3565b5b906000526020600020906002020160008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001019080519060200190610f04929190611265565b509050508160056000836000015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548163ffffffff021916908363ffffffff160217905550505b6004805480610f7e57610f7d611dd2565b5b6001900381819060005260206000209060020201600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055600182016000610fca91906112eb565b50509055600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81549063ffffffff02191690555050565b81600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550806110f65760008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663858ced35836040518263ffffffff1660e01b81526004016110c391906119f9565b600060405180830381600087803b1580156110dd57600080fd5b505af11580156110f1573d6000803e3d6000fd5b505050505b5050565b66071afd498d0000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16311015611263576000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16316611c37937e080006111909190611d6f565b90506000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16826040516111da90611c0f565b60006040518083038185875af1925050503d8060008114611217576040519150601f19603f3d011682016040523d82523d6000602084013e61121c565b606091505b5050905080611260576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161125790611c70565b60405180910390fd5b50505b565b82805461127190611ad5565b90600052602060002090601f01602090048101928261129357600085556112da565b82601f106112ac57805160ff19168380011785556112da565b828001600101855582156112da579182015b828111156112d95782518255916020019190600101906112be565b5b5090506112e7919061132b565b5090565b5080546112f790611ad5565b6000825580601f106113095750611328565b601f016020900490600052602060002090810190611327919061132b565b5b50565b5b8082111561134457600081600090555060010161132c565b5090565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006113878261135c565b9050919050565b6113978161137c565b81146113a257600080fd5b50565b6000813590506113b48161138e565b92915050565b6000602082840312156113d0576113cf611352565b5b60006113de848285016113a5565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600061141e8261135c565b9050919050565b61142e81611413565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561146e578082015181840152602081019050611453565b8381111561147d576000848401525b50505050565b6000601f19601f8301169050919050565b600061149f82611434565b6114a9818561143f565b93506114b9818560208601611450565b6114c281611483565b840191505092915050565b60006040830160008301516114e56000860182611425565b50602083015184820360208601526114fd8282611494565b9150508091505092915050565b600061151683836114cd565b905092915050565b6000602082019050919050565b6000611536826113e7565b61154081856113f2565b93508360208202850161155285611403565b8060005b8581101561158e578484038952815161156f858261150a565b945061157a8361151e565b925060208a01995050600181019050611556565b50829750879550505050505092915050565b600060208201905081810360008301526115ba818461152b565b905092915050565b6115cb81611413565b81146115d657600080fd5b50565b6000813590506115e8816115c2565b92915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61163082611483565b810181811067ffffffffffffffff8211171561164f5761164e6115f8565b5b80604052505050565b6000611662611348565b905061166e8282611627565b919050565b600067ffffffffffffffff82111561168e5761168d6115f8565b5b61169782611483565b9050602081019050919050565b82818337600083830152505050565b60006116c66116c184611673565b611658565b9050828152602081018484840111156116e2576116e16115f3565b5b6116ed8482856116a4565b509392505050565b600082601f83011261170a576117096115ee565b5b813561171a8482602086016116b3565b91505092915050565b6000806040838503121561173a57611739611352565b5b6000611748858286016115d9565b925050602083013567ffffffffffffffff81111561176957611768611357565b5b611775858286016116f5565b9150509250929050565b61178881611413565b82525050565b60006020820190506117a3600083018461177f565b92915050565b6000819050919050565b6117bc816117a9565b81146117c757600080fd5b50565b6000813590506117d9816117b3565b92915050565b600080604083850312156117f6576117f5611352565b5b6000611804858286016115d9565b9250506020611815858286016117ca565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b60006118578383611425565b60208301905092915050565b6000602082019050919050565b600061187b8261181f565b611885818561182a565b93506118908361183b565b8060005b838110156118c15781516118a8888261184b565b97506118b383611863565b925050600181019050611894565b5085935050505092915050565b600060208201905081810360008301526118e88184611870565b905092915050565b60006020828403121561190657611905611352565b5b6000611914848285016115d9565b91505092915050565b600082825260208201905092915050565b7f4e6f7420636f6e74726f6c6c6572000000000000000000000000000000000000600082015250565b6000611964600e8361191d565b915061196f8261192e565b602082019050919050565b6000602082019050818103600083015261199381611957565b9050919050565b6000819050919050565b60006119bf6119ba6119b58461135c565b61199a565b61135c565b9050919050565b60006119d1826119a4565b9050919050565b60006119e3826119c6565b9050919050565b6119f3816119d8565b82525050565b6000602082019050611a0e60008301846119ea565b92915050565b7f4d7573742062652065697468657220757365722c20636f6e74726f6c6c65722060008201527f6f7220666163746f727900000000000000000000000000000000000000000000602082015250565b6000611a70602a8361191d565b9150611a7b82611a14565b604082019050919050565b60006020820190508181036000830152611a9f81611a63565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611aed57607f821691505b602082108103611b0057611aff611aa6565b5b50919050565b7f52656365697069656e7420616c7265616479206578697374696e670000000000600082015250565b6000611b3c601b8361191d565b9150611b4782611b06565b602082019050919050565b60006020820190508181036000830152611b6b81611b2f565b9050919050565b7f4e6f742075736572000000000000000000000000000000000000000000000000600082015250565b6000611ba860088361191d565b9150611bb382611b72565b602082019050919050565b60006020820190508181036000830152611bd781611b9b565b9050919050565b600081905092915050565b50565b6000611bf9600083611bde565b9150611c0482611be9565b600082019050919050565b6000611c1a82611bec565b9150819050919050565b7f4661696c656420746f2073656e64204574686572000000000000000000000000600082015250565b6000611c5a60148361191d565b9150611c6582611c24565b602082019050919050565b60006020820190508181036000830152611c8981611c4d565b9050919050565b7f52656365697069656e74206e6f7420666f756e64000000000000000000000000600082015250565b6000611cc660148361191d565b9150611cd182611c90565b602082019050919050565b60006020820190508181036000830152611cf581611cb9565b9050919050565b600063ffffffff82169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611d4682611cfc565b9150611d5183611cfc565b925082821015611d6457611d63611d0c565b5b828203905092915050565b6000611d7a826117a9565b9150611d85836117a9565b925082821015611d9857611d97611d0c565b5b828203905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fdfea2646970667358221220c27d4695b5afd4f7122cbf2a27f83aafa067194571f0c433b2d6f7a75f7906ef64736f6c634300080d0033a264697066735822122090ea1a39fc6dae424f34d8cafb1b029f5310a28d83cd344acd1d7bb31633aacb64736f6c634300080d0033",
  "deployedBytecode": "0x6080604052600436106200007a5760003560e01c806392eefe9b116200005557806392eefe9b146200010d57806398575188146200013b5780639888402e1462000169578063a6e497b61462000189576200007a565b8063392e53cd146200007f57806339526f6014620000af578063858ced3514620000df575b600080fd5b3480156200008c57600080fd5b5062000097620001cd565b604051620000a69190620007a6565b60405180910390f35b348015620000bc57600080fd5b50620000c7620001d6565b604051620000d6919062000808565b60405180910390f35b348015620000ec57600080fd5b506200010b60048036038101906200010591906200085b565b6200023c565b005b3480156200011a57600080fd5b506200013960048036038101906200013391906200085b565b62000358565b005b3480156200014857600080fd5b506200016760048036038101906200016191906200085b565b62000473565b005b620001876004803603810190620001819190620008d2565b62000573565b005b3480156200019657600080fd5b50620001b56004803603810190620001af91906200085b565b62000712565b604051620001c4919062000808565b60405180910390f35b60006001905090565b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900463ffffffff1663ffffffff1611620002d7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620002ce906200098b565b60405180910390fd5b33600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900463ffffffff1663ffffffff1611620003f3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620003ea906200098b565b60405180910390fd5b336000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900463ffffffff1663ffffffff16116200050e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040162000505906200098b565b60405180910390fd5b600160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905550565b600034338360405162000586906200077b565b62000593929190620009be565b6040518091039082f0905080158015620005b1573d6000803e3d6000fd5b5090506001600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548163ffffffff021916908363ffffffff160217905550806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b612af980620009ec83390190565b60008115159050919050565b620007a08162000789565b82525050565b6000602082019050620007bd600083018462000795565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620007f082620007c3565b9050919050565b6200080281620007e3565b82525050565b60006020820190506200081f6000830184620007f7565b92915050565b600080fd5b6200083581620007e3565b81146200084157600080fd5b50565b60008135905062000855816200082a565b92915050565b60006020828403121562000874576200087362000825565b5b6000620008848482850162000844565b91505092915050565b60006200089a82620007c3565b9050919050565b620008ac816200088d565b8114620008b857600080fd5b50565b600081359050620008cc81620008a1565b92915050565b600060208284031215620008eb57620008ea62000825565b5b6000620008fb84828501620008bb565b91505092915050565b600082825260208201905092915050565b7f506f636b65742077616c6c6574206973206e6f7420726567697374657265642060008201527f696e20666163746f727900000000000000000000000000000000000000000000602082015250565b600062000973602a8362000904565b9150620009808262000915565b604082019050919050565b60006020820190508181036000830152620009a68162000964565b9050919050565b620009b8816200088d565b82525050565b6000604082019050620009d56000830185620007f7565b620009e46020830184620009ad565b939250505056fe608060405260405162002af938038062002af9833981810160405281019062000029919062000904565b336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506200007c826001620000ee60201b60201c565b6200008f8160016200024a60201b60201c565b6200009f6200032560201b60201c565b620000e6826040518060400160405280600581526020017f44616464790000000000000000000000000000000000000000000000000000008152506200049a60201b60201c565b505062000cb2565b6001829080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548163ffffffff021916908363ffffffff16021790555080620002465760008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166392eefe9b836040518263ffffffff1660e01b81526004016200021191906200095c565b600060405180830381600087803b1580156200022c57600080fd5b505af115801562000241573d6000803e3d6000fd5b505050505b5050565b81600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080620003215760008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663858ced35836040518263ffffffff1660e01b8152600401620002ec9190620009e4565b600060405180830381600087803b1580156200030757600080fd5b505af11580156200031c573d6000803e3d6000fd5b505050505b5050565b66071afd498d0000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1631101562000498576000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16316611c37937e08000620003be919062000a3a565b90506000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16826040516200040a9062000aaa565b60006040518083038185875af1925050503d806000811462000449576040519150601f19603f3d011682016040523d82523d6000602084013e6200044e565b606091505b505090508062000495576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200048c9062000b22565b60405180910390fd5b50505b565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16148062000542575060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b80620005a357506001600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900463ffffffff1663ffffffff16145b620005e5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620005dc9062000bba565b60405180910390fd5b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900463ffffffff1663ffffffff161462000680576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620006779062000c2c565b60405180910390fd5b600460405180604001604052808473ffffffffffffffffffffffffffffffffffffffff16815260200183815250908060018154018082558091505060019003906000526020600020906002020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010190805190602001906200073b929190620007a5565b505050600480549050600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548163ffffffff021916908363ffffffff1602179055505050565b828054620007b39062000c7d565b90600052602060002090601f016020900481019282620007d7576000855562000823565b82601f10620007f257805160ff191683800117855562000823565b8280016001018555821562000823579182015b828111156200082257825182559160200191906001019062000805565b5b50905062000832919062000836565b5090565b5b808211156200085157600081600090555060010162000837565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600062000887826200085a565b9050919050565b62000899816200087a565b8114620008a557600080fd5b50565b600081519050620008b9816200088e565b92915050565b6000620008cc826200085a565b9050919050565b620008de81620008bf565b8114620008ea57600080fd5b50565b600081519050620008fe81620008d3565b92915050565b600080604083850312156200091e576200091d62000855565b5b60006200092e85828601620008a8565b92505060206200094185828601620008ed565b9150509250929050565b62000956816200087a565b82525050565b60006020820190506200097360008301846200094b565b92915050565b6000819050919050565b6000620009a46200099e62000998846200085a565b62000979565b6200085a565b9050919050565b6000620009b88262000983565b9050919050565b6000620009cc82620009ab565b9050919050565b620009de81620009bf565b82525050565b6000602082019050620009fb6000830184620009d3565b92915050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600062000a478262000a01565b915062000a548362000a01565b92508282101562000a6a5762000a6962000a0b565b5b828203905092915050565b600081905092915050565b50565b600062000a9260008362000a75565b915062000a9f8262000a80565b600082019050919050565b600062000ab78262000a83565b9150819050919050565b600082825260208201905092915050565b7f4661696c656420746f2073656e64204574686572000000000000000000000000600082015250565b600062000b0a60148362000ac1565b915062000b178262000ad2565b602082019050919050565b6000602082019050818103600083015262000b3d8162000afb565b9050919050565b7f4d7573742062652065697468657220757365722c20636f6e74726f6c6c65722060008201527f6f7220666163746f727900000000000000000000000000000000000000000000602082015250565b600062000ba2602a8362000ac1565b915062000baf8262000b44565b604082019050919050565b6000602082019050818103600083015262000bd58162000b93565b9050919050565b7f52656365697069656e7420616c7265616479206578697374696e670000000000600082015250565b600062000c14601b8362000ac1565b915062000c218262000bdc565b602082019050919050565b6000602082019050818103600083015262000c478162000c05565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168062000c9657607f821691505b60208210810362000cac5762000cab62000c4e565b5b50919050565b611e378062000cc26000396000f3fe6080604052600436106100745760003560e01c8063832880e71161004e578063832880e7146100fd578063af7d6ca314610128578063b4e8a6c414610151578063ef6a7c1d1461017c5761007b565b80634420e4861461008057806359ba1394146100a95780635f4ad480146100d45761007b565b3661007b57005b600080fd5b34801561008c57600080fd5b506100a760048036038101906100a291906113ba565b6101a5565b005b3480156100b557600080fd5b506100be610357565b6040516100cb91906115a0565b60405180910390f35b3480156100e057600080fd5b506100fb60048036038101906100f69190611723565b6105e4565b005b34801561010957600080fd5b506101126108e5565b60405161011f919061178e565b60405180910390f35b34801561013457600080fd5b5061014f600480360381019061014a91906117df565b61090f565b005b34801561015d57600080fd5b50610166610a64565b60405161017391906118ce565b60405180910390f35b34801561018857600080fd5b506101a3600480360381019061019e91906118f0565b610af2565b005b6001600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900463ffffffff1663ffffffff161461023d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102349061197a565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16036103415760008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166398575188600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b815260040161030e91906119f9565b600060405180830381600087803b15801561032857600080fd5b505af115801561033c573d6000803e3d6000fd5b505050505b61034c816000611024565b6103546110fa565b50565b6060600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610400575060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b8061046057506001600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900463ffffffff1663ffffffff16145b61049f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161049690611a86565b60405180910390fd5b6004805480602002602001604051908101604052809291908181526020016000905b828210156105db57838290600052602060002090600202016040518060400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160018201805461054a90611ad5565b80601f016020809104026020016040519081016040528092919081815260200182805461057690611ad5565b80156105c35780601f10610598576101008083540402835291602001916105c3565b820191906000526020600020905b8154815290600101906020018083116105a657829003601f168201915b505050505081525050815260200190600101906104c1565b50505050905090565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16148061068b575060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b806106eb57506001600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900463ffffffff1663ffffffff16145b61072a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161072190611a86565b60405180910390fd5b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900463ffffffff1663ffffffff16146107c2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107b990611b52565b60405180910390fd5b600460405180604001604052808473ffffffffffffffffffffffffffffffffffffffff16815260200183815250908060018154018082558091505060019003906000526020600020906002020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101908051906020019061087b929190611265565b505050600480549050600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548163ffffffff021916908363ffffffff1602179055505050565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461099f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161099690611bbe565b60405180910390fd5b4781106109ab57600080fd5b60008273ffffffffffffffffffffffffffffffffffffffff16826040516109d190611c0f565b60006040518083038185875af1925050503d8060008114610a0e576040519150601f19603f3d011682016040523d82523d6000602084013e610a13565b606091505b5050905080610a57576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a4e90611c70565b60405180910390fd5b610a5f6110fa565b505050565b60606001805480602002602001604051908101604052809291908181526020018280548015610ae857602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610a9e575b5050505050905090565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610b99575060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b80610bf957506001600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900463ffffffff1663ffffffff16145b610c38576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c2f90611a86565b60405180910390fd5b6000600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900463ffffffff1663ffffffff1611610cd0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cc790611cdc565b60405180910390fd5b60006001600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900463ffffffff16610d2e9190611d3b565b90506001600480549050610d429190611d6f565b8163ffffffff1614610f6c57600060046001600480549050610d649190611d6f565b81548110610d7557610d74611da3565b5b90600052602060002090600202016040518060400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182018054610df490611ad5565b80601f0160208091040260200160405190810160405280929190818152602001828054610e2090611ad5565b8015610e6d5780601f10610e4257610100808354040283529160200191610e6d565b820191906000526020600020905b815481529060010190602001808311610e5057829003601f168201915b50505050508152505090508060048363ffffffff1681548110610e9357610e92611da3565b5b906000526020600020906002020160008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001019080519060200190610f04929190611265565b509050508160056000836000015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548163ffffffff021916908363ffffffff160217905550505b6004805480610f7e57610f7d611dd2565b5b6001900381819060005260206000209060020201600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055600182016000610fca91906112eb565b50509055600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81549063ffffffff02191690555050565b81600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550806110f65760008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663858ced35836040518263ffffffff1660e01b81526004016110c391906119f9565b600060405180830381600087803b1580156110dd57600080fd5b505af11580156110f1573d6000803e3d6000fd5b505050505b5050565b66071afd498d0000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16311015611263576000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16316611c37937e080006111909190611d6f565b90506000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16826040516111da90611c0f565b60006040518083038185875af1925050503d8060008114611217576040519150601f19603f3d011682016040523d82523d6000602084013e61121c565b606091505b5050905080611260576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161125790611c70565b60405180910390fd5b50505b565b82805461127190611ad5565b90600052602060002090601f01602090048101928261129357600085556112da565b82601f106112ac57805160ff19168380011785556112da565b828001600101855582156112da579182015b828111156112d95782518255916020019190600101906112be565b5b5090506112e7919061132b565b5090565b5080546112f790611ad5565b6000825580601f106113095750611328565b601f016020900490600052602060002090810190611327919061132b565b5b50565b5b8082111561134457600081600090555060010161132c565b5090565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006113878261135c565b9050919050565b6113978161137c565b81146113a257600080fd5b50565b6000813590506113b48161138e565b92915050565b6000602082840312156113d0576113cf611352565b5b60006113de848285016113a5565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600061141e8261135c565b9050919050565b61142e81611413565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561146e578082015181840152602081019050611453565b8381111561147d576000848401525b50505050565b6000601f19601f8301169050919050565b600061149f82611434565b6114a9818561143f565b93506114b9818560208601611450565b6114c281611483565b840191505092915050565b60006040830160008301516114e56000860182611425565b50602083015184820360208601526114fd8282611494565b9150508091505092915050565b600061151683836114cd565b905092915050565b6000602082019050919050565b6000611536826113e7565b61154081856113f2565b93508360208202850161155285611403565b8060005b8581101561158e578484038952815161156f858261150a565b945061157a8361151e565b925060208a01995050600181019050611556565b50829750879550505050505092915050565b600060208201905081810360008301526115ba818461152b565b905092915050565b6115cb81611413565b81146115d657600080fd5b50565b6000813590506115e8816115c2565b92915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61163082611483565b810181811067ffffffffffffffff8211171561164f5761164e6115f8565b5b80604052505050565b6000611662611348565b905061166e8282611627565b919050565b600067ffffffffffffffff82111561168e5761168d6115f8565b5b61169782611483565b9050602081019050919050565b82818337600083830152505050565b60006116c66116c184611673565b611658565b9050828152602081018484840111156116e2576116e16115f3565b5b6116ed8482856116a4565b509392505050565b600082601f83011261170a576117096115ee565b5b813561171a8482602086016116b3565b91505092915050565b6000806040838503121561173a57611739611352565b5b6000611748858286016115d9565b925050602083013567ffffffffffffffff81111561176957611768611357565b5b611775858286016116f5565b9150509250929050565b61178881611413565b82525050565b60006020820190506117a3600083018461177f565b92915050565b6000819050919050565b6117bc816117a9565b81146117c757600080fd5b50565b6000813590506117d9816117b3565b92915050565b600080604083850312156117f6576117f5611352565b5b6000611804858286016115d9565b9250506020611815858286016117ca565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b60006118578383611425565b60208301905092915050565b6000602082019050919050565b600061187b8261181f565b611885818561182a565b93506118908361183b565b8060005b838110156118c15781516118a8888261184b565b97506118b383611863565b925050600181019050611894565b5085935050505092915050565b600060208201905081810360008301526118e88184611870565b905092915050565b60006020828403121561190657611905611352565b5b6000611914848285016115d9565b91505092915050565b600082825260208201905092915050565b7f4e6f7420636f6e74726f6c6c6572000000000000000000000000000000000000600082015250565b6000611964600e8361191d565b915061196f8261192e565b602082019050919050565b6000602082019050818103600083015261199381611957565b9050919050565b6000819050919050565b60006119bf6119ba6119b58461135c565b61199a565b61135c565b9050919050565b60006119d1826119a4565b9050919050565b60006119e3826119c6565b9050919050565b6119f3816119d8565b82525050565b6000602082019050611a0e60008301846119ea565b92915050565b7f4d7573742062652065697468657220757365722c20636f6e74726f6c6c65722060008201527f6f7220666163746f727900000000000000000000000000000000000000000000602082015250565b6000611a70602a8361191d565b9150611a7b82611a14565b604082019050919050565b60006020820190508181036000830152611a9f81611a63565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611aed57607f821691505b602082108103611b0057611aff611aa6565b5b50919050565b7f52656365697069656e7420616c7265616479206578697374696e670000000000600082015250565b6000611b3c601b8361191d565b9150611b4782611b06565b602082019050919050565b60006020820190508181036000830152611b6b81611b2f565b9050919050565b7f4e6f742075736572000000000000000000000000000000000000000000000000600082015250565b6000611ba860088361191d565b9150611bb382611b72565b602082019050919050565b60006020820190508181036000830152611bd781611b9b565b9050919050565b600081905092915050565b50565b6000611bf9600083611bde565b9150611c0482611be9565b600082019050919050565b6000611c1a82611bec565b9150819050919050565b7f4661696c656420746f2073656e64204574686572000000000000000000000000600082015250565b6000611c5a60148361191d565b9150611c6582611c24565b602082019050919050565b60006020820190508181036000830152611c8981611c4d565b9050919050565b7f52656365697069656e74206e6f7420666f756e64000000000000000000000000600082015250565b6000611cc660148361191d565b9150611cd182611c90565b602082019050919050565b60006020820190508181036000830152611cf581611cb9565b9050919050565b600063ffffffff82169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611d4682611cfc565b9150611d5183611cfc565b925082821015611d6457611d63611d0c565b5b828203905092915050565b6000611d7a826117a9565b9150611d85836117a9565b925082821015611d9857611d97611d0c565b5b828203905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fdfea2646970667358221220c27d4695b5afd4f7122cbf2a27f83aafa067194571f0c433b2d6f7a75f7906ef64736f6c634300080d0033a264697066735822122090ea1a39fc6dae424f34d8cafb1b029f5310a28d83cd344acd1d7bb31633aacb64736f6c634300080d0033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:4443:3",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "49:48:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "59:32:3",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "84:5:3"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "77:6:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "77:13:3"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "70:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "70:21:3"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "59:7:3"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "31:5:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "41:7:3",
                "type": ""
              }
            ],
            "src": "7:90:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "162:50:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "179:3:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "199:5:3"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_bool",
                          "nodeType": "YulIdentifier",
                          "src": "184:14:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "184:21:3"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "172:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "172:34:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "172:34:3"
                }
              ]
            },
            "name": "abi_encode_t_bool_to_t_bool_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "150:5:3",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "157:3:3",
                "type": ""
              }
            ],
            "src": "103:109:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "310:118:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "320:26:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "332:9:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "343:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "328:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "328:18:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "320:4:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "394:6:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "407:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "418:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "403:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "403:17:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bool_to_t_bool_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "356:37:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "356:65:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "356:65:3"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "282:9:3",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "294:6:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "305:4:3",
                "type": ""
              }
            ],
            "src": "218:210:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "479:81:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "489:65:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "504:5:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "511:42:3",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "500:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "500:54:3"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "489:7:3"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "461:5:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "471:7:3",
                "type": ""
              }
            ],
            "src": "434:126:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "611:51:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "621:35:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "650:5:3"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "632:17:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "632:24:3"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "621:7:3"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "593:5:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "603:7:3",
                "type": ""
              }
            ],
            "src": "566:96:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "733:53:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "750:3:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "773:5:3"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "755:17:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "755:24:3"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "743:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "743:37:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "743:37:3"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "721:5:3",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "728:3:3",
                "type": ""
              }
            ],
            "src": "668:118:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "890:124:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "900:26:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "912:9:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "923:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "908:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "908:18:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "900:4:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "980:6:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "993:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1004:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "989:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "989:17:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "936:43:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "936:71:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "936:71:3"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "862:9:3",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "874:6:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "885:4:3",
                "type": ""
              }
            ],
            "src": "792:222:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1060:35:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1070:19:3",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1086:2:3",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1080:5:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1080:9:3"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "1070:6:3"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "1053:6:3",
                "type": ""
              }
            ],
            "src": "1020:75:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1190:28:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1207:1:3",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1210:1:3",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "1200:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1200:12:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1200:12:3"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "1101:117:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1313:28:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1330:1:3",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1333:1:3",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "1323:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1323:12:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1323:12:3"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "1224:117:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1390:79:3",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1447:16:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1456:1:3",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1459:1:3",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1449:6:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1449:12:3"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1449:12:3"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1413:5:3"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1438:5:3"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "1420:17:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1420:24:3"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1410:2:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1410:35:3"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1403:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1403:43:3"
                  },
                  "nodeType": "YulIf",
                  "src": "1400:63:3"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1383:5:3",
                "type": ""
              }
            ],
            "src": "1347:122:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1527:87:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1537:29:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1559:6:3"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1546:12:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1546:20:3"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "1537:5:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1602:5:3"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "1575:26:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1575:33:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1575:33:3"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "1505:6:3",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1513:3:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1521:5:3",
                "type": ""
              }
            ],
            "src": "1475:139:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1686:263:3",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1732:83:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "1734:77:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1734:79:3"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1734:79:3"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1707:7:3"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1716:9:3"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1703:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1703:23:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1728:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1699:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1699:32:3"
                  },
                  "nodeType": "YulIf",
                  "src": "1696:119:3"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1825:117:3",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1840:15:3",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1854:1:3",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1844:6:3",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1869:63:3",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1904:9:3"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1915:6:3"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1900:3:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1900:22:3"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1924:7:3"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1879:20:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1879:53:3"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1869:6:3"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1656:9:3",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1667:7:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1679:6:3",
                "type": ""
              }
            ],
            "src": "1620:329:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2008:51:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2018:35:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2047:5:3"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "2029:17:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2029:24:3"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "2018:7:3"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address_payable",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1990:5:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "2000:7:3",
                "type": ""
              }
            ],
            "src": "1955:104:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2116:87:3",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2181:16:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2190:1:3",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2193:1:3",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2183:6:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2183:12:3"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2183:12:3"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2139:5:3"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2172:5:3"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address_payable",
                              "nodeType": "YulIdentifier",
                              "src": "2146:25:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2146:32:3"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "2136:2:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2136:43:3"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2129:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2129:51:3"
                  },
                  "nodeType": "YulIf",
                  "src": "2126:71:3"
                }
              ]
            },
            "name": "validator_revert_t_address_payable",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2109:5:3",
                "type": ""
              }
            ],
            "src": "2065:138:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2269:95:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2279:29:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "2301:6:3"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2288:12:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2288:20:3"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "2279:5:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2352:5:3"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address_payable",
                      "nodeType": "YulIdentifier",
                      "src": "2317:34:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2317:41:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2317:41:3"
                }
              ]
            },
            "name": "abi_decode_t_address_payable",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "2247:6:3",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2255:3:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2263:5:3",
                "type": ""
              }
            ],
            "src": "2209:155:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2444:271:3",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2490:83:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "2492:77:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2492:79:3"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2492:79:3"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2465:7:3"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2474:9:3"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2461:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2461:23:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2486:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2457:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2457:32:3"
                  },
                  "nodeType": "YulIf",
                  "src": "2454:119:3"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2583:125:3",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2598:15:3",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2612:1:3",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2602:6:3",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2627:71:3",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2670:9:3"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2681:6:3"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2666:3:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2666:22:3"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2690:7:3"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address_payable",
                          "nodeType": "YulIdentifier",
                          "src": "2637:28:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2637:61:3"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "2627:6:3"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_payable",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2414:9:3",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2425:7:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2437:6:3",
                "type": ""
              }
            ],
            "src": "2370:345:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2817:73:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2834:3:3"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2839:6:3"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2827:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2827:19:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2827:19:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2855:29:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2874:3:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2879:4:3",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2870:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2870:14:3"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "2855:11:3"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2789:3:3",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "2794:6:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "2805:11:3",
                "type": ""
              }
            ],
            "src": "2721:169:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3002:123:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "3024:6:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3032:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3020:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3020:14:3"
                      },
                      {
                        "hexValue": "506f636b65742077616c6c6574206973206e6f74207265676973746572656420",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3036:34:3",
                        "type": "",
                        "value": "Pocket wallet is not registered "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3013:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3013:58:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3013:58:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "3092:6:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3100:2:3",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3088:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3088:15:3"
                      },
                      {
                        "hexValue": "696e20666163746f7279",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3105:12:3",
                        "type": "",
                        "value": "in factory"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3081:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3081:37:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3081:37:3"
                }
              ]
            },
            "name": "store_literal_in_memory_dca835f4b62cb5519ab617cb8806352f72af97a6d011e4278a4a5f224ef83a91",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "2994:6:3",
                "type": ""
              }
            ],
            "src": "2896:229:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3277:220:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3287:74:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3353:3:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3358:2:3",
                        "type": "",
                        "value": "42"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3294:58:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3294:67:3"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "3287:3:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3459:3:3"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_dca835f4b62cb5519ab617cb8806352f72af97a6d011e4278a4a5f224ef83a91",
                      "nodeType": "YulIdentifier",
                      "src": "3370:88:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3370:93:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3370:93:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3472:19:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3483:3:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3488:2:3",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3479:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3479:12:3"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "3472:3:3"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_dca835f4b62cb5519ab617cb8806352f72af97a6d011e4278a4a5f224ef83a91_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3265:3:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "3273:3:3",
                "type": ""
              }
            ],
            "src": "3131:366:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3674:248:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3684:26:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3696:9:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3707:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3692:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3692:18:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3684:4:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3731:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3742:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3727:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3727:17:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "3750:4:3"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3756:9:3"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3746:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3746:20:3"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3720:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3720:47:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3720:47:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3776:139:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "3910:4:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_dca835f4b62cb5519ab617cb8806352f72af97a6d011e4278a4a5f224ef83a91_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3784:124:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3784:131:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3776:4:3"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_dca835f4b62cb5519ab617cb8806352f72af97a6d011e4278a4a5f224ef83a91__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3654:9:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3669:4:3",
                "type": ""
              }
            ],
            "src": "3503:419:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4009:61:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4026:3:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "4057:5:3"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address_payable",
                          "nodeType": "YulIdentifier",
                          "src": "4031:25:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4031:32:3"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4019:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4019:45:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4019:45:3"
                }
              ]
            },
            "name": "abi_encode_t_address_payable_to_t_address_payable_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3997:5:3",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4004:3:3",
                "type": ""
              }
            ],
            "src": "3928:142:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4218:222:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4228:26:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4240:9:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4251:2:3",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4236:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4236:18:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4228:4:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4308:6:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4321:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4332:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4317:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4317:17:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4264:43:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4264:71:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4264:71:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "4405:6:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4418:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4429:2:3",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4414:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4414:18:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_payable_to_t_address_payable_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4345:59:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4345:88:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4345:88:3"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_payable__to_t_address_t_address_payable__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4182:9:3",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4194:6:3",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4202:6:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4213:4:3",
                "type": ""
              }
            ],
            "src": "4076:364:3"
          }
        ]
      },
      "contents": "{\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address_payable(value) {\n        if iszero(eq(value, cleanup_t_address_payable(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_payable(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address_payable(value)\n    }\n\n    function abi_decode_tuple_t_address_payable(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_payable(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_dca835f4b62cb5519ab617cb8806352f72af97a6d011e4278a4a5f224ef83a91(memPtr) {\n\n        mstore(add(memPtr, 0), \"Pocket wallet is not registered \")\n\n        mstore(add(memPtr, 32), \"in factory\")\n\n    }\n\n    function abi_encode_t_stringliteral_dca835f4b62cb5519ab617cb8806352f72af97a6d011e4278a4a5f224ef83a91_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 42)\n        store_literal_in_memory_dca835f4b62cb5519ab617cb8806352f72af97a6d011e4278a4a5f224ef83a91(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_dca835f4b62cb5519ab617cb8806352f72af97a6d011e4278a4a5f224ef83a91__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_dca835f4b62cb5519ab617cb8806352f72af97a6d011e4278a4a5f224ef83a91_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_t_address_payable_to_t_address_payable_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address_payable(value))\n    }\n\n    function abi_encode_tuple_t_address_t_address_payable__to_t_address_t_address_payable__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_payable_to_t_address_payable_fromStack(value1,  add(headStart, 32))\n\n    }\n\n}\n",
      "id": 3,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "95:1764:2:-:0;;;308:21;;;;;;;;;;95:1764;;;;;;",
  "deployedSourceMap": "95:1764:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;335:82;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1725:132;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;723:270;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;423:294;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;999:267;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1272:317;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1595:124;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;335:82;383:4;406;399:11;;335:82;:::o;1725:132::-;1790:7;1816:22;:34;1839:10;1816:34;;;;;;;;;;;;;;;;;;;;;;;;;1809:41;;1725:132;:::o;723:270::-;809:1;781:13;:25;795:10;781:25;;;;;;;;;;;;;;;;;;;;;;;;;:29;;;773:84;;;;;;;;;;;;:::i;:::-;;;;;;;;;976:10;951:16;:22;968:4;951:22;;;;;;;;;;;;;;;;:35;;;;;;;;;;;;;;;;;;723:270;:::o;423:294::-;521:1;493:13;:25;507:10;493:25;;;;;;;;;;;;;;;;;;;;;;;;;:29;;;485:84;;;;;;;;;;;;:::i;:::-;;;;;;;;;700:10;663:22;:34;686:10;663:34;;;;;;;;;;;;;;;;:47;;;;;;;;;;;;;;;;;;423:294;:::o;999:267::-;1088:1;1060:13;:25;1074:10;1060:25;;;;;;;;;;;;;;;;;;;;;;;;;:29;;;1052:84;;;;;;;;;;;;:::i;:::-;;;;;;;;;1237:16;:22;1254:4;1237:22;;;;;;;;;;;;;;;;1230:29;;;;;;;;;;;999:267;:::o;1272:317::-;1349:19;1397:9;1408:10;1420:4;1371:54;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;1349:76;;1468:1;1435:13;:30;1457:6;1435:30;;;;;;;;;;;;;;;;:34;;;;;;;;;;;;;;;;;;1524:6;1479:22;:34;1502:10;1479:34;;;;;;;;;;;;;;;;:52;;;;;;;;;;;;;;;;;;1574:6;1541:16;:22;1558:4;1541:22;;;;;;;;;;;;;;;;:40;;;;;;;;;;;;;;;;;;1339:250;1272:317;:::o;1595:124::-;1664:7;1690:16;:22;1707:4;1690:22;;;;;;;;;;;;;;;;;;;;;;;;;1683:29;;1595:124;;;:::o;-1:-1:-1:-;;;;;;;;:::o;7:90:3:-;41:7;84:5;77:13;70:21;59:32;;7:90;;;:::o;103:109::-;184:21;199:5;184:21;:::i;:::-;179:3;172:34;103:109;;:::o;218:210::-;305:4;343:2;332:9;328:18;320:26;;356:65;418:1;407:9;403:17;394:6;356:65;:::i;:::-;218:210;;;;:::o;434:126::-;471:7;511:42;504:5;500:54;489:65;;434:126;;;:::o;566:96::-;603:7;632:24;650:5;632:24;:::i;:::-;621:35;;566:96;;;:::o;668:118::-;755:24;773:5;755:24;:::i;:::-;750:3;743:37;668:118;;:::o;792:222::-;885:4;923:2;912:9;908:18;900:26;;936:71;1004:1;993:9;989:17;980:6;936:71;:::i;:::-;792:222;;;;:::o;1101:117::-;1210:1;1207;1200:12;1347:122;1420:24;1438:5;1420:24;:::i;:::-;1413:5;1410:35;1400:63;;1459:1;1456;1449:12;1400:63;1347:122;:::o;1475:139::-;1521:5;1559:6;1546:20;1537:29;;1575:33;1602:5;1575:33;:::i;:::-;1475:139;;;;:::o;1620:329::-;1679:6;1728:2;1716:9;1707:7;1703:23;1699:32;1696:119;;;1734:79;;:::i;:::-;1696:119;1854:1;1879:53;1924:7;1915:6;1904:9;1900:22;1879:53;:::i;:::-;1869:63;;1825:117;1620:329;;;;:::o;1955:104::-;2000:7;2029:24;2047:5;2029:24;:::i;:::-;2018:35;;1955:104;;;:::o;2065:138::-;2146:32;2172:5;2146:32;:::i;:::-;2139:5;2136:43;2126:71;;2193:1;2190;2183:12;2126:71;2065:138;:::o;2209:155::-;2263:5;2301:6;2288:20;2279:29;;2317:41;2352:5;2317:41;:::i;:::-;2209:155;;;;:::o;2370:345::-;2437:6;2486:2;2474:9;2465:7;2461:23;2457:32;2454:119;;;2492:79;;:::i;:::-;2454:119;2612:1;2637:61;2690:7;2681:6;2670:9;2666:22;2637:61;:::i;:::-;2627:71;;2583:125;2370:345;;;;:::o;2721:169::-;2805:11;2839:6;2834:3;2827:19;2879:4;2874:3;2870:14;2855:29;;2721:169;;;;:::o;2896:229::-;3036:34;3032:1;3024:6;3020:14;3013:58;3105:12;3100:2;3092:6;3088:15;3081:37;2896:229;:::o;3131:366::-;3273:3;3294:67;3358:2;3353:3;3294:67;:::i;:::-;3287:74;;3370:93;3459:3;3370:93;:::i;:::-;3488:2;3483:3;3479:12;3472:19;;3131:366;;;:::o;3503:419::-;3669:4;3707:2;3696:9;3692:18;3684:26;;3756:9;3750:4;3746:20;3742:1;3731:9;3727:17;3720:47;3784:131;3910:4;3784:131;:::i;:::-;3776:139;;3503:419;;;:::o;3928:142::-;4031:32;4057:5;4031:32;:::i;:::-;4026:3;4019:45;3928:142;;:::o;4076:364::-;4213:4;4251:2;4240:9;4236:18;4228:26;;4264:71;4332:1;4321:9;4317:17;4308:6;4264:71;:::i;:::-;4345:88;4429:2;4418:9;4414:18;4405:6;4345:88;:::i;:::-;4076:364;;;;;:::o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity >=0.4.22 <0.9.0;\nimport \"./PocketWallet.sol\";\n\ncontract PocketWalletFactory {\n\n    mapping(address => address) private _controllersToContract;\n    mapping(address => address) private _usersToContract;\n    mapping(address => uint32) private _contractsMap;\n\n    constructor() {\n    }\n\n    function isInitialized() external pure returns (bool) {\n        return true;\n    }\n\n    function setController(address controller) external {\n        require(_contractsMap[msg.sender] > 0, \"Pocket wallet is not registered in factory\"); // ensures the pocket wallet contract (= sender) has been created from this factory\n        _controllersToContract[controller] = msg.sender;\n    }\n\n    function setUser(address user) external {\n        require(_contractsMap[msg.sender] > 0, \"Pocket wallet is not registered in factory\"); // ensures the pocket wallet contract (= sender) has been created from this factory\n        _usersToContract[user] = msg.sender;\n    }\n\n    function removeUser(address user) external {\n        require(_contractsMap[msg.sender] > 0, \"Pocket wallet is not registered in factory\"); // ensures the pocket wallet contract (= sender) has been created from this factory\n        delete _usersToContract[user];\n    }\n\n    function createPocketWallet(address payable user) external payable {\n        PocketWallet wallet = (new PocketWallet){value: msg.value}(msg.sender, user);\n        _contractsMap[address(wallet)] = 1;\n        _controllersToContract[msg.sender] = address(wallet);\n        _usersToContract[user] = address(wallet); \n    }\n\n    function getUserContractAddress(address user) external view returns (address) {\n        return _usersToContract[user];\n    }\n\n    function getMyControlledContractAddress() external view returns (address) {\n        return _controllersToContract[msg.sender];\n    }\n}\n",
  "sourcePath": "/home/exploit/my/truffle/pocket-wallet/contracts/PocketWalletFactory.sol",
  "ast": {
    "absolutePath": "project:/contracts/PocketWalletFactory.sol",
    "exportedSymbols": {
      "PocketWallet": [
        441
      ],
      "PocketWalletFactory": [
        608
      ],
      "PocketWalletReceipient": [
        41
      ]
    },
    "id": 609,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 443,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".22",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:32:2"
      },
      {
        "absolutePath": "project:/contracts/PocketWallet.sol",
        "file": "./PocketWallet.sol",
        "id": 444,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 609,
        "sourceUnit": 442,
        "src": "65:28:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "PocketWalletFactory",
        "contractDependencies": [
          441
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 608,
        "linearizedBaseContracts": [
          608
        ],
        "name": "PocketWalletFactory",
        "nameLocation": "104:19:2",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 448,
            "mutability": "mutable",
            "name": "_controllersToContract",
            "nameLocation": "167:22:2",
            "nodeType": "VariableDeclaration",
            "scope": 608,
            "src": "131:58:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
              "typeString": "mapping(address => address)"
            },
            "typeName": {
              "id": 447,
              "keyType": {
                "id": 445,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "139:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "131:27:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                "typeString": "mapping(address => address)"
              },
              "valueType": {
                "id": 446,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "150:7:2",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 452,
            "mutability": "mutable",
            "name": "_usersToContract",
            "nameLocation": "231:16:2",
            "nodeType": "VariableDeclaration",
            "scope": 608,
            "src": "195:52:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
              "typeString": "mapping(address => address)"
            },
            "typeName": {
              "id": 451,
              "keyType": {
                "id": 449,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "203:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "195:27:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                "typeString": "mapping(address => address)"
              },
              "valueType": {
                "id": 450,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "214:7:2",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 456,
            "mutability": "mutable",
            "name": "_contractsMap",
            "nameLocation": "288:13:2",
            "nodeType": "VariableDeclaration",
            "scope": 608,
            "src": "253:48:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint32_$",
              "typeString": "mapping(address => uint32)"
            },
            "typeName": {
              "id": 455,
              "keyType": {
                "id": 453,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "261:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "253:26:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint32_$",
                "typeString": "mapping(address => uint32)"
              },
              "valueType": {
                "id": 454,
                "name": "uint32",
                "nodeType": "ElementaryTypeName",
                "src": "272:6:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint32",
                  "typeString": "uint32"
                }
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 459,
              "nodeType": "Block",
              "src": "322:7:2",
              "statements": []
            },
            "id": 460,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 457,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "319:2:2"
            },
            "returnParameters": {
              "id": 458,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "322:0:2"
            },
            "scope": 608,
            "src": "308:21:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 467,
              "nodeType": "Block",
              "src": "389:28:2",
              "statements": [
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 465,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "406:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 464,
                  "id": 466,
                  "nodeType": "Return",
                  "src": "399:11:2"
                }
              ]
            },
            "functionSelector": "392e53cd",
            "id": 468,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isInitialized",
            "nameLocation": "344:13:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 461,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "357:2:2"
            },
            "returnParameters": {
              "id": 464,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 463,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 468,
                  "src": "383:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 462,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "383:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "382:6:2"
            },
            "scope": 608,
            "src": "335:82:2",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 490,
              "nodeType": "Block",
              "src": "475:242:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "id": 479,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 474,
                            "name": "_contractsMap",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 456,
                            "src": "493:13:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint32_$",
                              "typeString": "mapping(address => uint32)"
                            }
                          },
                          "id": 477,
                          "indexExpression": {
                            "expression": {
                              "id": 475,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "507:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 476,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "507:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "493:25:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 478,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "521:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "493:29:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "506f636b65742077616c6c6574206973206e6f74207265676973746572656420696e20666163746f7279",
                        "id": 480,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "524:44:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_dca835f4b62cb5519ab617cb8806352f72af97a6d011e4278a4a5f224ef83a91",
                          "typeString": "literal_string \"Pocket wallet is not registered in factory\""
                        },
                        "value": "Pocket wallet is not registered in factory"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_dca835f4b62cb5519ab617cb8806352f72af97a6d011e4278a4a5f224ef83a91",
                          "typeString": "literal_string \"Pocket wallet is not registered in factory\""
                        }
                      ],
                      "id": 473,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "485:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 481,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "485:84:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 482,
                  "nodeType": "ExpressionStatement",
                  "src": "485:84:2"
                },
                {
                  "expression": {
                    "id": 488,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 483,
                        "name": "_controllersToContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 448,
                        "src": "663:22:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 485,
                      "indexExpression": {
                        "id": 484,
                        "name": "controller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 470,
                        "src": "686:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "663:34:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 486,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "700:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 487,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "700:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "663:47:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 489,
                  "nodeType": "ExpressionStatement",
                  "src": "663:47:2"
                }
              ]
            },
            "functionSelector": "92eefe9b",
            "id": 491,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setController",
            "nameLocation": "432:13:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 471,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 470,
                  "mutability": "mutable",
                  "name": "controller",
                  "nameLocation": "454:10:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 491,
                  "src": "446:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 469,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "446:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "445:20:2"
            },
            "returnParameters": {
              "id": 472,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "475:0:2"
            },
            "scope": 608,
            "src": "423:294:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 513,
              "nodeType": "Block",
              "src": "763:230:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "id": 502,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 497,
                            "name": "_contractsMap",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 456,
                            "src": "781:13:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint32_$",
                              "typeString": "mapping(address => uint32)"
                            }
                          },
                          "id": 500,
                          "indexExpression": {
                            "expression": {
                              "id": 498,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "795:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 499,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "795:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "781:25:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 501,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "809:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "781:29:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "506f636b65742077616c6c6574206973206e6f74207265676973746572656420696e20666163746f7279",
                        "id": 503,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "812:44:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_dca835f4b62cb5519ab617cb8806352f72af97a6d011e4278a4a5f224ef83a91",
                          "typeString": "literal_string \"Pocket wallet is not registered in factory\""
                        },
                        "value": "Pocket wallet is not registered in factory"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_dca835f4b62cb5519ab617cb8806352f72af97a6d011e4278a4a5f224ef83a91",
                          "typeString": "literal_string \"Pocket wallet is not registered in factory\""
                        }
                      ],
                      "id": 496,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "773:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 504,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "773:84:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 505,
                  "nodeType": "ExpressionStatement",
                  "src": "773:84:2"
                },
                {
                  "expression": {
                    "id": 511,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 506,
                        "name": "_usersToContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 452,
                        "src": "951:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 508,
                      "indexExpression": {
                        "id": 507,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 493,
                        "src": "968:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "951:22:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 509,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "976:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 510,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "976:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "951:35:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 512,
                  "nodeType": "ExpressionStatement",
                  "src": "951:35:2"
                }
              ]
            },
            "functionSelector": "858ced35",
            "id": 514,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUser",
            "nameLocation": "732:7:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 494,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 493,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "748:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 514,
                  "src": "740:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 492,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "740:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "739:14:2"
            },
            "returnParameters": {
              "id": 495,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "763:0:2"
            },
            "scope": 608,
            "src": "723:270:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 534,
              "nodeType": "Block",
              "src": "1042:224:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "id": 525,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 520,
                            "name": "_contractsMap",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 456,
                            "src": "1060:13:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint32_$",
                              "typeString": "mapping(address => uint32)"
                            }
                          },
                          "id": 523,
                          "indexExpression": {
                            "expression": {
                              "id": 521,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "1074:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 522,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1074:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1060:25:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 524,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1088:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1060:29:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "506f636b65742077616c6c6574206973206e6f74207265676973746572656420696e20666163746f7279",
                        "id": 526,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1091:44:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_dca835f4b62cb5519ab617cb8806352f72af97a6d011e4278a4a5f224ef83a91",
                          "typeString": "literal_string \"Pocket wallet is not registered in factory\""
                        },
                        "value": "Pocket wallet is not registered in factory"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_dca835f4b62cb5519ab617cb8806352f72af97a6d011e4278a4a5f224ef83a91",
                          "typeString": "literal_string \"Pocket wallet is not registered in factory\""
                        }
                      ],
                      "id": 519,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1052:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 527,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1052:84:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 528,
                  "nodeType": "ExpressionStatement",
                  "src": "1052:84:2"
                },
                {
                  "expression": {
                    "id": 532,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "1230:29:2",
                    "subExpression": {
                      "baseExpression": {
                        "id": 529,
                        "name": "_usersToContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 452,
                        "src": "1237:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 531,
                      "indexExpression": {
                        "id": 530,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 516,
                        "src": "1254:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1237:22:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 533,
                  "nodeType": "ExpressionStatement",
                  "src": "1230:29:2"
                }
              ]
            },
            "functionSelector": "98575188",
            "id": 535,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "removeUser",
            "nameLocation": "1008:10:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 517,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 516,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "1027:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 535,
                  "src": "1019:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 515,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1019:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1018:14:2"
            },
            "returnParameters": {
              "id": 518,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1042:0:2"
            },
            "scope": 608,
            "src": "999:267:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 583,
              "nodeType": "Block",
              "src": "1339:250:2",
              "statements": [
                {
                  "assignments": [
                    542
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 542,
                      "mutability": "mutable",
                      "name": "wallet",
                      "nameLocation": "1362:6:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 583,
                      "src": "1349:19:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_PocketWallet_$441",
                        "typeString": "contract PocketWallet"
                      },
                      "typeName": {
                        "id": 541,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 540,
                          "name": "PocketWallet",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 441,
                          "src": "1349:12:2"
                        },
                        "referencedDeclaration": 441,
                        "src": "1349:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PocketWallet_$441",
                          "typeString": "contract PocketWallet"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 554,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 550,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1408:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 551,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1408:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 552,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 537,
                        "src": "1420:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        ],
                        "components": [
                          {
                            "id": 545,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "1372:16:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_payable$_t_address_$_t_address_payable_$returns$_t_contract$_PocketWallet_$441_$",
                              "typeString": "function (address,address payable) payable returns (contract PocketWallet)"
                            },
                            "typeName": {
                              "id": 544,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 543,
                                "name": "PocketWallet",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 441,
                                "src": "1376:12:2"
                              },
                              "referencedDeclaration": 441,
                              "src": "1376:12:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_PocketWallet_$441",
                                "typeString": "contract PocketWallet"
                              }
                            }
                          }
                        ],
                        "id": 546,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "1371:18:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_payable$_t_address_$_t_address_payable_$returns$_t_contract$_PocketWallet_$441_$",
                          "typeString": "function (address,address payable) payable returns (contract PocketWallet)"
                        }
                      },
                      "id": 549,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "expression": {
                            "id": 547,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1397:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 548,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "1397:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "1371:36:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_payable$_t_address_$_t_address_payable_$returns$_t_contract$_PocketWallet_$441_$value",
                        "typeString": "function (address,address payable) payable returns (contract PocketWallet)"
                      }
                    },
                    "id": 553,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1371:54:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_PocketWallet_$441",
                      "typeString": "contract PocketWallet"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1349:76:2"
                },
                {
                  "expression": {
                    "id": 562,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 555,
                        "name": "_contractsMap",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 456,
                        "src": "1435:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint32_$",
                          "typeString": "mapping(address => uint32)"
                        }
                      },
                      "id": 560,
                      "indexExpression": {
                        "arguments": [
                          {
                            "id": 558,
                            "name": "wallet",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 542,
                            "src": "1457:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PocketWallet_$441",
                              "typeString": "contract PocketWallet"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_PocketWallet_$441",
                              "typeString": "contract PocketWallet"
                            }
                          ],
                          "id": 557,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1449:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 556,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1449:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 559,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1449:15:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1435:30:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 561,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1468:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "1435:34:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 563,
                  "nodeType": "ExpressionStatement",
                  "src": "1435:34:2"
                },
                {
                  "expression": {
                    "id": 572,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 564,
                        "name": "_controllersToContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 448,
                        "src": "1479:22:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 567,
                      "indexExpression": {
                        "expression": {
                          "id": 565,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1502:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 566,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1502:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1479:34:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 570,
                          "name": "wallet",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 542,
                          "src": "1524:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_PocketWallet_$441",
                            "typeString": "contract PocketWallet"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_PocketWallet_$441",
                            "typeString": "contract PocketWallet"
                          }
                        ],
                        "id": 569,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1516:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 568,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1516:7:2",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 571,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1516:15:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1479:52:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 573,
                  "nodeType": "ExpressionStatement",
                  "src": "1479:52:2"
                },
                {
                  "expression": {
                    "id": 581,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 574,
                        "name": "_usersToContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 452,
                        "src": "1541:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 576,
                      "indexExpression": {
                        "id": 575,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 537,
                        "src": "1558:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1541:22:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 579,
                          "name": "wallet",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 542,
                          "src": "1574:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_PocketWallet_$441",
                            "typeString": "contract PocketWallet"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_PocketWallet_$441",
                            "typeString": "contract PocketWallet"
                          }
                        ],
                        "id": 578,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1566:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 577,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1566:7:2",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 580,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1566:15:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1541:40:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 582,
                  "nodeType": "ExpressionStatement",
                  "src": "1541:40:2"
                }
              ]
            },
            "functionSelector": "9888402e",
            "id": 584,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createPocketWallet",
            "nameLocation": "1281:18:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 538,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 537,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "1316:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 584,
                  "src": "1300:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 536,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1300:15:2",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1299:22:2"
            },
            "returnParameters": {
              "id": 539,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1339:0:2"
            },
            "scope": 608,
            "src": "1272:317:2",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 595,
              "nodeType": "Block",
              "src": "1673:46:2",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 591,
                      "name": "_usersToContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 452,
                      "src": "1690:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                        "typeString": "mapping(address => address)"
                      }
                    },
                    "id": 593,
                    "indexExpression": {
                      "id": 592,
                      "name": "user",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 586,
                      "src": "1707:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1690:22:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 590,
                  "id": 594,
                  "nodeType": "Return",
                  "src": "1683:29:2"
                }
              ]
            },
            "functionSelector": "a6e497b6",
            "id": 596,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getUserContractAddress",
            "nameLocation": "1604:22:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 587,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 586,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "1635:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 596,
                  "src": "1627:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 585,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1627:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1626:14:2"
            },
            "returnParameters": {
              "id": 590,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 589,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 596,
                  "src": "1664:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 588,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1664:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1663:9:2"
            },
            "scope": 608,
            "src": "1595:124:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 606,
              "nodeType": "Block",
              "src": "1799:58:2",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 601,
                      "name": "_controllersToContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 448,
                      "src": "1816:22:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                        "typeString": "mapping(address => address)"
                      }
                    },
                    "id": 604,
                    "indexExpression": {
                      "expression": {
                        "id": 602,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "1839:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 603,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "1839:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1816:34:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 600,
                  "id": 605,
                  "nodeType": "Return",
                  "src": "1809:41:2"
                }
              ]
            },
            "functionSelector": "39526f60",
            "id": 607,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getMyControlledContractAddress",
            "nameLocation": "1734:30:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 597,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1764:2:2"
            },
            "returnParameters": {
              "id": 600,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 599,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 607,
                  "src": "1790:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 598,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1790:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1789:9:2"
            },
            "scope": 608,
            "src": "1725:132:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 609,
        "src": "95:1764:2",
        "usedErrors": []
      }
    ],
    "src": "32:1828:2"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.13+commit.abaa5c0e.Emscripten.clang"
  },
  "networks": {
    "1655804295756": {
      "events": {},
      "links": {},
      "address": "0xd1476bC527eEC759a03fd9cb5A0c227B700D49d3",
      "transactionHash": "0x2a8d23a568315fe24aafbe8eeb70c7765a30698db470de8726c1ffcd2db0e470"
    },
    "1655804919138": {
      "events": {},
      "links": {},
      "address": "0xd1476bC527eEC759a03fd9cb5A0c227B700D49d3",
      "transactionHash": "0x2ddc0f3f042f52630cd2764634572ef310273766cab09f955959db4a20d3df6d"
    },
    "1655805109825": {
      "events": {},
      "links": {},
      "address": "0xd1476bC527eEC759a03fd9cb5A0c227B700D49d3",
      "transactionHash": "0x2ddc0f3f042f52630cd2764634572ef310273766cab09f955959db4a20d3df6d"
    },
    "1655805793049": {
      "events": {},
      "links": {},
      "address": "0xd1476bC527eEC759a03fd9cb5A0c227B700D49d3",
      "transactionHash": "0x316a57c50e0efde9da903a84cf43aa8cb1859f9c01393ad06cb89a27eceb2a9b"
    },
    "1655805920607": {
      "events": {},
      "links": {},
      "address": "0xd1476bC527eEC759a03fd9cb5A0c227B700D49d3",
      "transactionHash": "0xbc43041be1f597a4574354074160cbbad1b982dba77195c56c96b0d4fa09d942"
    },
    "1655806019469": {
      "events": {},
      "links": {},
      "address": "0xd1476bC527eEC759a03fd9cb5A0c227B700D49d3",
      "transactionHash": "0xb21c90c784fc4c3b4082a51406a02b6777942e606fddeebaabe84b33ac56bc3c"
    },
    "1655810319619": {
      "events": {},
      "links": {},
      "address": "0xd1476bC527eEC759a03fd9cb5A0c227B700D49d3",
      "transactionHash": "0x83b4ae66c8d31eb6153ae6a6940adf8ec5cc252c3335346d6e53d5fc058dd0c6"
    },
    "1655810424129": {
      "events": {},
      "links": {},
      "address": "0xd1476bC527eEC759a03fd9cb5A0c227B700D49d3",
      "transactionHash": "0xa03cc80c5aadc9a366f469586e1c6e5e78ef9fbd6e2f8b00b62aac3220c91b51"
    },
    "1655881772015": {
      "events": {},
      "links": {},
      "address": "0xd1476bC527eEC759a03fd9cb5A0c227B700D49d3",
      "transactionHash": "0x734422db898aaad22c135ac578629aaaeb480351b210d5482ba01ce4e1ad0381"
    },
    "1655890316017": {
      "events": {},
      "links": {},
      "address": "0xd1476bC527eEC759a03fd9cb5A0c227B700D49d3",
      "transactionHash": "0x56a721393484c38d8c8cd673f1b1a19da6908eae6bc8d6d2984a3ae977d6d4e0"
    },
    "1655898637752": {
      "events": {},
      "links": {},
      "address": "0xd1476bC527eEC759a03fd9cb5A0c227B700D49d3",
      "transactionHash": "0x3cbc112da879593efe8755463e02b51b263c766d8271b04a839af38dc04d3205"
    },
    "1655902189075": {
      "events": {},
      "links": {},
      "address": "0xd1476bC527eEC759a03fd9cb5A0c227B700D49d3",
      "transactionHash": "0x928abaa5e5e028794d4c52eeaada9c1f83406c6f1d7a270b55bc147fe7d9e86f"
    },
    "1655909398790": {
      "events": {},
      "links": {},
      "address": "0xd1476bC527eEC759a03fd9cb5A0c227B700D49d3",
      "transactionHash": "0x3c7ffc515f5c4b21fdd59331b7d04912e05703fd6b320eb88b133a772eee8fab"
    },
    "1655909892002": {
      "events": {},
      "links": {},
      "address": "0xd1476bC527eEC759a03fd9cb5A0c227B700D49d3",
      "transactionHash": "0x91834d8d88ddfad9377f847e19739a7a7ca3653efaff27f3a671e4891040116a"
    },
    "1656052253940": {
      "events": {},
      "links": {},
      "address": "0xCd1e8c515090602aC2182dcDc5F850c702528758",
      "transactionHash": "0xc771d0750dc49ada00f863550522cdb7d22c16d193d1b1ee533b56a6a9d7917a"
    },
    "1656052780021": {
      "events": {},
      "links": {},
      "address": "0xd1476bC527eEC759a03fd9cb5A0c227B700D49d3",
      "transactionHash": "0x91834d8d88ddfad9377f847e19739a7a7ca3653efaff27f3a671e4891040116a"
    },
    "1656053173375": {
      "events": {},
      "links": {},
      "address": "0xd1476bC527eEC759a03fd9cb5A0c227B700D49d3",
      "transactionHash": "0x0224ee6063f8304643d7a44762a9c1a1afc932b18173eadbefee6bb647ccb224"
    },
    "1656129608488": {
      "events": {},
      "links": {},
      "address": "0xE588643b4e3480B22B48698A3deC6d861A59F0bb",
      "transactionHash": "0xdb15de012f5d3c35107768c8f837d6cb8fccf0464dfc74860a7d622625dcab63"
    },
    "1656137331560": {
      "events": {},
      "links": {},
      "address": "0xE588643b4e3480B22B48698A3deC6d861A59F0bb",
      "transactionHash": "0xf65f1636a61e1010ac23aa7447244b67ba8b6cc70f677d4c73a2787d05d894ae"
    },
    "1656140540318": {
      "events": {},
      "links": {},
      "address": "0xE588643b4e3480B22B48698A3deC6d861A59F0bb",
      "transactionHash": "0x7116f400e0c2021e034126c4a20d09da6938c0297e964df118410b98acc07f63"
    },
    "1656141414244": {
      "events": {},
      "links": {},
      "address": "0xE588643b4e3480B22B48698A3deC6d861A59F0bb",
      "transactionHash": "0x7116f400e0c2021e034126c4a20d09da6938c0297e964df118410b98acc07f63"
    },
    "1656142142834": {
      "events": {},
      "links": {},
      "address": "0xE588643b4e3480B22B48698A3deC6d861A59F0bb",
      "transactionHash": "0x7116f400e0c2021e034126c4a20d09da6938c0297e964df118410b98acc07f63"
    },
    "1656312909354": {
      "events": {},
      "links": {},
      "address": "0xd1476bC527eEC759a03fd9cb5A0c227B700D49d3",
      "transactionHash": "0x02929b22e75b72c96490f24eea1abdae9c9b9413432856f483be95b833e17a48"
    }
  },
  "schemaVersion": "3.4.7",
  "updatedAt": "2022-06-27T06:58:13.553Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}